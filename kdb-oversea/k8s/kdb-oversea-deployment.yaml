apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdb-oversea-app
  namespace: kdb-oversea
  labels:
    app: kdb-oversea-app
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kdb-oversea-app
  template:
    metadata:
      labels:
        app: kdb-oversea-app
        version: v1.0.0
    spec:
      containers:
        - name: kdb-oversea-app
          image: kdb-oversea-app:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: kdb-oversea-db-secret
                  key: url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kdb-oversea-db-secret
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kdb-oversea-db-secret
                  key: password
            - name: KDB_OVERSEA_MACHINE_MODE
              value: "KUBERNETES"
            - name: KDB_OVERSEA_ENVIRONMENT
              value: "production"
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx2g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: kdb-oversea-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: kdb-oversea-service
  namespace: kdb-oversea
  labels:
    app: kdb-oversea-app
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: kdb-oversea-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kdb-oversea-ingress
  namespace: kdb-oversea
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
spec:
  tls:
    - hosts:
        - api.kdb.co.kr
      secretName: kdb-oversea-tls
  rules:
    - host: api.kdb.co.kr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kdb-oversea-service
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kdb-oversea-hpa
  namespace: kdb-oversea
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kdb-oversea-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
